lockVersion: 2.0.0
id: 29f6286a-13e0-48c8-b4fa-b64fad6aed34
management:
  docChecksum: b227c6cbc7e594fe0d9a3658fd6424d3
  docVersion: 1.0.0
  speakeasyVersion: 1.624.0
  generationVersion: 2.714.0
  releaseVersion: 0.7.2
  configChecksum: 2e0e3af98252752c69fee9b02af6b126
  repoURL: https://github.com/patroninc/patron.git
  repoSubDirectory: clients/ts-sdk
  installationURL: https://gitpkg.now.sh/patroninc/patron/clients/ts-sdk
  published: true
features:
  typescript:
    additionalDependencies: 0.1.0
    core: 3.21.25
    defaultEnabledRetries: 0.1.0
    devContainers: 2.90.1
    enumUnions: 0.1.0
    envVarSecurityUsage: 0.1.2
    globalSecurity: 2.82.14
    globalSecurityCallbacks: 0.1.0
    globalServerURLs: 2.82.5
    groups: 2.81.2
    methodArguments: 0.1.2
    methodSecurity: 2.82.6
    nameOverrides: 2.81.2
    nullables: 0.1.1
    responseFormat: 0.2.3
    retries: 2.83.0
    sdkHooks: 0.3.0
    uploadStreams: 0.1.0
generatedFiles:
  - .devcontainer/README.md
  - .devcontainer/devcontainer.json
  - .devcontainer/setup.sh
  - .gitattributes
  - .npmignore
  - FUNCTIONS.md
  - RUNTIMES.md
  - USAGE.md
  - docs/lib/utils/retryconfig.md
  - docs/models/apikeyresponse.md
  - docs/models/authprovider.md
  - docs/models/checkemailrequest.md
  - docs/models/createapikeyrequest.md
  - docs/models/createapikeyresponse.md
  - docs/models/createpostrequest.md
  - docs/models/createseriesrequest.md
  - docs/models/errors/errorresponse.md
  - docs/models/filestatus.md
  - docs/models/filet.md
  - docs/models/fileuploadrequest.md
  - docs/models/fileuploadresponse.md
  - docs/models/forgotpasswordrequest.md
  - docs/models/forgotpasswordresponse.md
  - docs/models/loginrequest.md
  - docs/models/loginresponse.md
  - docs/models/logoutresponse.md
  - docs/models/operations/deleteapikeyrequest.md
  - docs/models/operations/deletefilerequest.md
  - docs/models/operations/deletefilesecurity.md
  - docs/models/operations/deletepostrequest.md
  - docs/models/operations/deleteseriesrequest.md
  - docs/models/operations/getapikeyrequest.md
  - docs/models/operations/getfilerequest.md
  - docs/models/operations/getfilesecurity.md
  - docs/models/operations/getmesecurity.md
  - docs/models/operations/getpostrequest.md
  - docs/models/operations/getseriesrequest.md
  - docs/models/operations/googleauthcallbackrequest.md
  - docs/models/operations/listapikeysrequest.md
  - docs/models/operations/listfilesrequest.md
  - docs/models/operations/listfilessecurity.md
  - docs/models/operations/listpostsrequest.md
  - docs/models/operations/listseriesrequest.md
  - docs/models/operations/logoutsecurity.md
  - docs/models/operations/resendverificationemailsecurity.md
  - docs/models/operations/servefilecdnrequest.md
  - docs/models/operations/servefilecdnsecurity.md
  - docs/models/operations/updateapikeyrequest.md
  - docs/models/operations/updatefilerequest.md
  - docs/models/operations/updatefilesecurity.md
  - docs/models/operations/updatepostrequest.md
  - docs/models/operations/updateseriesrequest.md
  - docs/models/operations/updateuserinfosecurity.md
  - docs/models/operations/uploadfilesecurity.md
  - docs/models/operations/verifyemailrequest.md
  - docs/models/postresponse.md
  - docs/models/registerrequest.md
  - docs/models/registerresponse.md
  - docs/models/resendverificationresponse.md
  - docs/models/resetpasswordrequest.md
  - docs/models/resetpasswordresponse.md
  - docs/models/security.md
  - docs/models/seriesresponse.md
  - docs/models/updateapikeyrequest.md
  - docs/models/updatepostrequest.md
  - docs/models/updateseriesrequest.md
  - docs/models/updateuserfilerequest.md
  - docs/models/updateuserinforequest.md
  - docs/models/updateuserinforesponse.md
  - docs/models/userfileinfo.md
  - docs/models/userinfo.md
  - docs/models/value.md
  - docs/sdks/apikeys/README.md
  - docs/sdks/auth/README.md
  - docs/sdks/files/README.md
  - docs/sdks/patronts/README.md
  - docs/sdks/posts/README.md
  - docs/sdks/series/README.md
  - eslint.config.mjs
  - examples/.env.template
  - examples/README.md
  - examples/apiKeysList.example.ts
  - examples/package.json
  - jsr.json
  - package.json
  - src/core.ts
  - src/funcs/apiKeysCreate.ts
  - src/funcs/apiKeysDelete.ts
  - src/funcs/apiKeysGet.ts
  - src/funcs/apiKeysList.ts
  - src/funcs/apiKeysUpdate.ts
  - src/funcs/authCheckEmail.ts
  - src/funcs/authForgotPassword.ts
  - src/funcs/authGetCurrentUser.ts
  - src/funcs/authGoogleCallback.ts
  - src/funcs/authGoogleRedirect.ts
  - src/funcs/authLogin.ts
  - src/funcs/authLogout.ts
  - src/funcs/authRegister.ts
  - src/funcs/authResendVerificationEmail.ts
  - src/funcs/authResetPassword.ts
  - src/funcs/authUpdateUserInfo.ts
  - src/funcs/authVerifyEmail.ts
  - src/funcs/filesDelete.ts
  - src/funcs/filesGet.ts
  - src/funcs/filesList.ts
  - src/funcs/filesServeCdn.ts
  - src/funcs/filesUpdate.ts
  - src/funcs/filesUpload.ts
  - src/funcs/postsCreate.ts
  - src/funcs/postsDelete.ts
  - src/funcs/postsGet.ts
  - src/funcs/postsList.ts
  - src/funcs/postsUpdate.ts
  - src/funcs/seriesCreate.ts
  - src/funcs/seriesDelete.ts
  - src/funcs/seriesGet.ts
  - src/funcs/seriesList.ts
  - src/funcs/seriesUpdate.ts
  - src/hooks/hooks.ts
  - src/hooks/index.ts
  - src/hooks/types.ts
  - src/index.ts
  - src/lib/base64.ts
  - src/lib/config.ts
  - src/lib/dlv.ts
  - src/lib/encodings.ts
  - src/lib/env.ts
  - src/lib/files.ts
  - src/lib/http.ts
  - src/lib/is-plain-object.ts
  - src/lib/logger.ts
  - src/lib/matchers.ts
  - src/lib/primitives.ts
  - src/lib/retries.ts
  - src/lib/schemas.ts
  - src/lib/sdks.ts
  - src/lib/security.ts
  - src/lib/url.ts
  - src/models/apikeyresponse.ts
  - src/models/authprovider.ts
  - src/models/checkemailrequest.ts
  - src/models/createapikeyrequest.ts
  - src/models/createapikeyresponse.ts
  - src/models/createpostrequest.ts
  - src/models/createseriesrequest.ts
  - src/models/errors/errorresponse.ts
  - src/models/errors/httpclienterrors.ts
  - src/models/errors/index.ts
  - src/models/errors/patrontsdefaulterror.ts
  - src/models/errors/patrontserror.ts
  - src/models/errors/responsevalidationerror.ts
  - src/models/errors/sdkvalidationerror.ts
  - src/models/filestatus.ts
  - src/models/fileuploadrequest.ts
  - src/models/fileuploadresponse.ts
  - src/models/forgotpasswordrequest.ts
  - src/models/forgotpasswordresponse.ts
  - src/models/index.ts
  - src/models/loginrequest.ts
  - src/models/loginresponse.ts
  - src/models/logoutresponse.ts
  - src/models/operations/deleteapikey.ts
  - src/models/operations/deletefile.ts
  - src/models/operations/deletepost.ts
  - src/models/operations/deleteseries.ts
  - src/models/operations/getapikey.ts
  - src/models/operations/getfile.ts
  - src/models/operations/getme.ts
  - src/models/operations/getpost.ts
  - src/models/operations/getseries.ts
  - src/models/operations/googleauthcallback.ts
  - src/models/operations/index.ts
  - src/models/operations/listapikeys.ts
  - src/models/operations/listfiles.ts
  - src/models/operations/listposts.ts
  - src/models/operations/listseries.ts
  - src/models/operations/logout.ts
  - src/models/operations/resendverificationemail.ts
  - src/models/operations/servefilecdn.ts
  - src/models/operations/updateapikey.ts
  - src/models/operations/updatefile.ts
  - src/models/operations/updatepost.ts
  - src/models/operations/updateseries.ts
  - src/models/operations/updateuserinfo.ts
  - src/models/operations/uploadfile.ts
  - src/models/operations/verifyemail.ts
  - src/models/postresponse.ts
  - src/models/registerrequest.ts
  - src/models/registerresponse.ts
  - src/models/resendverificationresponse.ts
  - src/models/resetpasswordrequest.ts
  - src/models/resetpasswordresponse.ts
  - src/models/security.ts
  - src/models/seriesresponse.ts
  - src/models/updateapikeyrequest.ts
  - src/models/updatepostrequest.ts
  - src/models/updateseriesrequest.ts
  - src/models/updateuserfilerequest.ts
  - src/models/updateuserinforequest.ts
  - src/models/updateuserinforesponse.ts
  - src/models/userfileinfo.ts
  - src/models/userinfo.ts
  - src/models/value.ts
  - src/sdk/apikeys.ts
  - src/sdk/auth.ts
  - src/sdk/files.ts
  - src/sdk/index.ts
  - src/sdk/posts.ts
  - src/sdk/sdk.ts
  - src/sdk/series.ts
  - src/types/async.ts
  - src/types/blobs.ts
  - src/types/constdatetime.ts
  - src/types/enums.ts
  - src/types/fp.ts
  - src/types/index.ts
  - src/types/operations.ts
  - src/types/rfcdate.ts
  - src/types/streams.ts
  - tsconfig.json
examples:
  forgot_password:
    speakeasy-default-forgot-password:
      requestBody:
        application/json: {"email": "user@example.com"}
      responses:
        "200":
          application/json: {"message": "If the email exists in our system, a password reset link has been sent."}
        "500":
          application/json: {"code": "AUTH_INVALID_CREDENTIALS", "error": "Invalid email or password"}
  google_auth_redirect:
    speakeasy-default-google-auth-redirect:
      responses:
        "500":
          application/json: {"code": "AUTH_INVALID_CREDENTIALS", "error": "Invalid email or password"}
  google_auth_callback:
    speakeasy-default-google-auth-callback:
      parameters:
        query:
          code: "<value>"
          state: "Alaska"
      responses:
        "400":
          application/json: {"code": "AUTH_INVALID_CREDENTIALS", "error": "Invalid email or password"}
        "500":
          application/json: {"code": "AUTH_INVALID_CREDENTIALS", "error": "Invalid email or password"}
  login:
    speakeasy-default-login:
      requestBody:
        application/json: {"email": "user@example.com", "password": "password123"}
      responses:
        "200":
          application/json: {"message": "Login successful", "user": {"authProvider": "email", "displayName": "John Doe", "email": "user@example.com", "emailVerified": true, "id": "d290f1ee-6c54-4b01-90e6-d701748f0851"}}
        "400":
          application/json: {"code": "AUTH_INVALID_CREDENTIALS", "error": "Invalid email or password"}
        "500":
          application/json: {"code": "AUTH_INVALID_CREDENTIALS", "error": "Invalid email or password"}
  logout:
    speakeasy-default-logout:
      responses:
        "200":
          application/json: {"message": "Logged out successfully"}
  get_me:
    speakeasy-default-get-me:
      responses:
        "200":
          application/json: {"authProvider": "email", "avatarUrl": "https://example.com/avatar.jpg", "createdAt": "2023-01-01T00:00:00", "displayName": "John Doe", "email": "user@example.com", "emailVerified": true, "id": "a7b8c9d0-1234-5678-a123-567890123456", "lastLogin": "2023-01-02T12:00:00"}
        "401":
          application/json: {"code": "AUTH_INVALID_CREDENTIALS", "error": "Invalid email or password"}
  register:
    speakeasy-default-register:
      requestBody:
        application/json: {"email": "user@example.com", "password": "password123"}
      responses:
        "200":
          application/json: {"message": "Registration successful. Please check your email for verification.", "user": {"authProvider": "email", "displayName": "John Doe", "email": "user@example.com", "emailVerified": false, "id": "d290f1ee-6c54-4b01-90e6-d701748f0851"}}
        "400":
          application/json: {"code": "AUTH_INVALID_CREDENTIALS", "error": "Invalid email or password"}
        "500":
          application/json: {"code": "AUTH_INVALID_CREDENTIALS", "error": "Invalid email or password"}
  reset_password:
    speakeasy-default-reset-password:
      requestBody:
        application/json: {"newPassword": "newpassword123", "token": "550e8400-e29b-41d4-a716-446655440000", "userId": "d290f1ee-6c54-4b01-90e6-d701748f0851"}
      responses:
        "200":
          application/json: {"message": "Password has been reset successfully"}
        "400":
          application/json: {"code": "AUTH_INVALID_CREDENTIALS", "error": "Invalid email or password"}
        "500":
          application/json: {"code": "AUTH_INVALID_CREDENTIALS", "error": "Invalid email or password"}
  verify_email:
    speakeasy-default-verify-email:
      parameters:
        query:
          token: "<value>"
      responses:
        "400":
          application/json: {"code": "AUTH_INVALID_CREDENTIALS", "error": "Invalid email or password"}
        "500":
          application/json: {"code": "AUTH_INVALID_CREDENTIALS", "error": "Invalid email or password"}
  check_email:
    speakeasy-default-check-email:
      requestBody:
        application/json: {"email": "user@example.com"}
      responses:
        "500":
          application/json: {"code": "AUTH_INVALID_CREDENTIALS", "error": "Invalid email or password"}
  resend_verification_email:
    speakeasy-default-resend-verification-email:
      responses:
        "200":
          application/json: {"message": "Verification email sent successfully"}
        "400":
          application/json: {"code": "AUTH_INVALID_CREDENTIALS", "error": "Invalid email or password"}
        "500":
          application/json: {"code": "AUTH_INVALID_CREDENTIALS", "error": "Invalid email or password"}
  update_user_info:
    speakeasy-default-update-user-info:
      requestBody:
        application/json: {"avatarUrl": "https://example.com/new-avatar.jpg", "description": "A brief description about myself", "displayName": "New Display Name"}
      responses:
        "200":
          application/json: {"message": "User information updated successfully", "user": {"authProvider": "email", "displayName": "New Display Name", "email": "user@example.com", "emailVerified": true, "id": "d290f1ee-6c54-4b01-90e6-d701748f0851"}}
        "401":
          application/json: {"code": "AUTH_INVALID_CREDENTIALS", "error": "Invalid email or password"}
        "500":
          application/json: {"code": "AUTH_INVALID_CREDENTIALS", "error": "Invalid email or password"}
  serve_file_cdn:
    speakeasy-default-serve-file-cdn:
      parameters:
        path:
          file_id: "39974a06-0f39-432d-896c-ec8ec5a187f3"
      responses:
        "401":
          application/json: {"code": "AUTH_INVALID_CREDENTIALS", "error": "Invalid email or password"}
        "500":
          application/json: {"code": "AUTH_INVALID_CREDENTIALS", "error": "Invalid email or password"}
  list_files:
    speakeasy-default-list-files:
      responses:
        "200":
          application/json: [{"createdAt": "2023-01-01T00:00:00Z", "fileHash": "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855", "fileSize": 1048576, "filename": "document.pdf", "id": "b8c9d0e1-2345-6789-b234-678901234567", "metadata": {}, "mimeType": "application/pdf", "originalFilename": "My Important Document.pdf", "status": "uploaded", "updatedAt": "2023-01-01T00:00:00Z", "userId": "c9d0e1f2-3456-789a-c345-789012345678"}]
        "401":
          application/json: {"code": "AUTH_INVALID_CREDENTIALS", "error": "Invalid email or password"}
        "500":
          application/json: {"code": "AUTH_INVALID_CREDENTIALS", "error": "Invalid email or password"}
  upload_file:
    speakeasy-default-upload-file:
      requestBody:
        multipart/form-data: {"file": "Binary file content (PDF, image, document, etc.)"}
      responses:
        "201":
          application/json: {"file": {"createdAt": "2023-01-01T00:00:00Z", "fileHash": "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855", "fileSize": 1048576, "filename": "document.pdf", "id": "d290f1ee-6c54-4b01-90e6-d701748f0851", "metadata": {}, "mimeType": "application/pdf", "originalFilename": "My Important Document.pdf", "status": "uploaded", "updatedAt": "2023-01-01T00:00:00Z", "userId": "f47ac10b-58cc-4372-a567-0e02b2c3d479"}, "message": "File uploaded successfully"}
        "400":
          application/json: {"code": "AUTH_INVALID_CREDENTIALS", "error": "Invalid email or password"}
        "500":
          application/json: {"code": "AUTH_INVALID_CREDENTIALS", "error": "Invalid email or password"}
  get_file:
    speakeasy-default-get-file:
      parameters:
        path:
          file_id: "b9989da6-aed4-4643-949a-a7c28d664def"
      responses:
        "200":
          application/json: {"createdAt": "2023-01-01T00:00:00Z", "fileHash": "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855", "fileSize": 1048576, "filename": "document.pdf", "id": "b8c9d0e1-2345-6789-b234-678901234567", "metadata": {}, "mimeType": "application/pdf", "originalFilename": "My Important Document.pdf", "status": "uploaded", "updatedAt": "2023-01-01T00:00:00Z", "userId": "c9d0e1f2-3456-789a-c345-789012345678"}
        "401":
          application/json: {"code": "AUTH_INVALID_CREDENTIALS", "error": "Invalid email or password"}
        "500":
          application/json: {"code": "AUTH_INVALID_CREDENTIALS", "error": "Invalid email or password"}
  update_file:
    speakeasy-default-update-file:
      parameters:
        path:
          file_id: "ce621f1a-00d2-437b-b1d0-5650eed83f65"
      requestBody:
        application/json: {"filename": "renamed_document.pdf", "metadata": {}, "status": "processed"}
      responses:
        "200":
          application/json: {"createdAt": "2023-01-01T00:00:00Z", "fileHash": "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855", "fileSize": 1048576, "filename": "document.pdf", "id": "b8c9d0e1-2345-6789-b234-678901234567", "metadata": {}, "mimeType": "application/pdf", "originalFilename": "My Important Document.pdf", "status": "uploaded", "updatedAt": "2023-01-01T00:00:00Z", "userId": "c9d0e1f2-3456-789a-c345-789012345678"}
        "401":
          application/json: {"code": "AUTH_INVALID_CREDENTIALS", "error": "Invalid email or password"}
        "500":
          application/json: {"code": "AUTH_INVALID_CREDENTIALS", "error": "Invalid email or password"}
  delete_file:
    speakeasy-default-delete-file:
      parameters:
        path:
          file_id: "9d527cd7-448b-40b4-9b53-301ef075d563"
      responses:
        "401":
          application/json: {"code": "AUTH_INVALID_CREDENTIALS", "error": "Invalid email or password"}
        "500":
          application/json: {"code": "AUTH_INVALID_CREDENTIALS", "error": "Invalid email or password"}
  list_posts:
    speakeasy-default-list-posts:
      responses:
        "200":
          application/json: [{"audioFileId": "c3d4e5f6-7890-1234-cdef-123456789012", "content": "Welcome to our first episode where we discuss the fundamentals...", "createdAt": "2023-01-01T00:00:00Z", "id": "d290f1ee-6c54-4b01-90e6-d701748f0851", "isPremium": false, "isPublished": true, "postNumber": 1, "seriesId": "b2c3d4e5-6f78-9012-bcde-f12345678901", "slug": "episode-1-getting-started", "thumbnailUrl": "https://example.com/thumbnail.jpg", "title": "Episode 1: Getting Started", "updatedAt": "2023-01-01T12:00:00Z", "videoFileId": "d4e5f6a7-8901-2345-def0-234567890123"}]
        "401":
          application/json: {"code": "AUTH_INVALID_CREDENTIALS", "error": "Invalid email or password"}
        "500":
          application/json: {"code": "AUTH_INVALID_CREDENTIALS", "error": "Invalid email or password"}
  create_post:
    speakeasy-default-create-post:
      requestBody:
        application/json: {"audioFileId": "c3d4e5f6-7890-1234-cdef-123456789012", "content": "Welcome to our first episode where we discuss the fundamentals...", "isPremium": false, "isPublished": false, "postNumber": 1, "seriesId": "b2c3d4e5-6f78-9012-bcde-f12345678901", "slug": "episode-1-getting-started", "thumbnailUrl": "https://example.com/thumbnail.jpg", "title": "Episode 1: Getting Started", "videoFileId": "d4e5f6a7-8901-2345-def0-234567890123"}
      responses:
        "201":
          application/json: {"audioFileId": "c3d4e5f6-7890-1234-cdef-123456789012", "content": "Welcome to our first episode where we discuss the fundamentals...", "createdAt": "2023-01-01T00:00:00Z", "id": "d290f1ee-6c54-4b01-90e6-d701748f0851", "isPremium": false, "isPublished": true, "postNumber": 1, "seriesId": "b2c3d4e5-6f78-9012-bcde-f12345678901", "slug": "episode-1-getting-started", "thumbnailUrl": "https://example.com/thumbnail.jpg", "title": "Episode 1: Getting Started", "updatedAt": "2023-01-01T12:00:00Z", "videoFileId": "d4e5f6a7-8901-2345-def0-234567890123"}
        "400":
          application/json: {"code": "AUTH_INVALID_CREDENTIALS", "error": "Invalid email or password"}
        "500":
          application/json: {"code": "AUTH_INVALID_CREDENTIALS", "error": "Invalid email or password"}
  get_post:
    speakeasy-default-get-post:
      parameters:
        path:
          post_id: "8b23b066-adfe-4d2d-967f-9f5fad145517"
      responses:
        "200":
          application/json: {"audioFileId": "c3d4e5f6-7890-1234-cdef-123456789012", "content": "Welcome to our first episode where we discuss the fundamentals...", "createdAt": "2023-01-01T00:00:00Z", "id": "d290f1ee-6c54-4b01-90e6-d701748f0851", "isPremium": false, "isPublished": true, "postNumber": 1, "seriesId": "b2c3d4e5-6f78-9012-bcde-f12345678901", "slug": "episode-1-getting-started", "thumbnailUrl": "https://example.com/thumbnail.jpg", "title": "Episode 1: Getting Started", "updatedAt": "2023-01-01T12:00:00Z", "videoFileId": "d4e5f6a7-8901-2345-def0-234567890123"}
        "401":
          application/json: {"code": "AUTH_INVALID_CREDENTIALS", "error": "Invalid email or password"}
        "500":
          application/json: {"code": "AUTH_INVALID_CREDENTIALS", "error": "Invalid email or password"}
  update_post:
    speakeasy-default-update-post:
      parameters:
        path:
          post_id: "05830c7f-2322-4d89-99a3-4f2a63d863b4"
      requestBody:
        application/json: {"audioFileId": "c3d4e5f6-7890-1234-cdef-123456789012", "content": "Updated content for the first episode with more details...", "isPremium": true, "isPublished": true, "postNumber": 2, "slug": "episode-1-updated", "thumbnailUrl": "https://example.com/new-thumbnail.jpg", "title": "Episode 1: Getting Started (Updated)", "videoFileId": "d4e5f6a7-8901-2345-def0-234567890123"}
      responses:
        "200":
          application/json: {"audioFileId": "c3d4e5f6-7890-1234-cdef-123456789012", "content": "Welcome to our first episode where we discuss the fundamentals...", "createdAt": "2023-01-01T00:00:00Z", "id": "d290f1ee-6c54-4b01-90e6-d701748f0851", "isPremium": false, "isPublished": true, "postNumber": 1, "seriesId": "b2c3d4e5-6f78-9012-bcde-f12345678901", "slug": "episode-1-getting-started", "thumbnailUrl": "https://example.com/thumbnail.jpg", "title": "Episode 1: Getting Started", "updatedAt": "2023-01-01T12:00:00Z", "videoFileId": "d4e5f6a7-8901-2345-def0-234567890123"}
        "401":
          application/json: {"code": "AUTH_INVALID_CREDENTIALS", "error": "Invalid email or password"}
        "500":
          application/json: {"code": "AUTH_INVALID_CREDENTIALS", "error": "Invalid email or password"}
  delete_post:
    speakeasy-default-delete-post:
      parameters:
        path:
          post_id: "8b634f82-0ea7-401a-85d3-c55d13adab6d"
      responses:
        "401":
          application/json: {"code": "AUTH_INVALID_CREDENTIALS", "error": "Invalid email or password"}
        "500":
          application/json: {"code": "AUTH_INVALID_CREDENTIALS", "error": "Invalid email or password"}
  list_series:
    speakeasy-default-list-series:
      responses:
        "200":
          application/json: [{"category": "Technology", "coverImageUrl": "https://example.com/cover.jpg", "createdAt": "2023-01-01T00:00:00Z", "description": "A weekly podcast about technology and innovation", "id": "e5f6a7b8-9012-3456-ef01-345678901234", "isMonetized": false, "isPublished": true, "pricingTier": "free", "slug": "my-awesome-podcast", "title": "My Awesome Podcast", "updatedAt": "2023-01-01T12:00:00Z", "userId": "f6a7b8c9-0123-4567-f012-456789012345"}]
        "401":
          application/json: {"code": "AUTH_INVALID_CREDENTIALS", "error": "Invalid email or password"}
        "500":
          application/json: {"code": "AUTH_INVALID_CREDENTIALS", "error": "Invalid email or password"}
  create_series:
    speakeasy-default-create-series:
      requestBody:
        application/json: {"category": "Technology", "coverImageUrl": "https://example.com/cover.jpg", "description": "A weekly podcast about technology and innovation", "isMonetized": false, "isPublished": false, "pricingTier": "free", "slug": "my-awesome-podcast", "title": "My Awesome Podcast"}
      responses:
        "201":
          application/json: {"category": "Technology", "coverImageUrl": "https://example.com/cover.jpg", "createdAt": "2023-01-01T00:00:00Z", "description": "A weekly podcast about technology and innovation", "id": "e5f6a7b8-9012-3456-ef01-345678901234", "isMonetized": false, "isPublished": true, "pricingTier": "free", "slug": "my-awesome-podcast", "title": "My Awesome Podcast", "updatedAt": "2023-01-01T12:00:00Z", "userId": "f6a7b8c9-0123-4567-f012-456789012345"}
        "400":
          application/json: {"code": "AUTH_INVALID_CREDENTIALS", "error": "Invalid email or password"}
        "500":
          application/json: {"code": "AUTH_INVALID_CREDENTIALS", "error": "Invalid email or password"}
  get_series:
    speakeasy-default-get-series:
      parameters:
        path:
          series_id: "8d41996a-2849-497f-a32a-300c043d4e31"
      responses:
        "200":
          application/json: {"category": "Technology", "coverImageUrl": "https://example.com/cover.jpg", "createdAt": "2023-01-01T00:00:00Z", "description": "A weekly podcast about technology and innovation", "id": "e5f6a7b8-9012-3456-ef01-345678901234", "isMonetized": false, "isPublished": true, "pricingTier": "free", "slug": "my-awesome-podcast", "title": "My Awesome Podcast", "updatedAt": "2023-01-01T12:00:00Z", "userId": "f6a7b8c9-0123-4567-f012-456789012345"}
        "401":
          application/json: {"code": "AUTH_INVALID_CREDENTIALS", "error": "Invalid email or password"}
        "500":
          application/json: {"code": "AUTH_INVALID_CREDENTIALS", "error": "Invalid email or password"}
  update_series:
    speakeasy-default-update-series:
      parameters:
        path:
          series_id: "3a6d3426-0ca8-459f-9b67-866f35bbfc88"
      requestBody:
        application/json: {"category": "Technology", "coverImageUrl": "https://example.com/new-cover.jpg", "description": "An updated description with more details", "isMonetized": true, "isPublished": true, "pricingTier": "premium", "slug": "my-updated-podcast", "title": "My Updated Podcast"}
      responses:
        "200":
          application/json: {"category": "Technology", "coverImageUrl": "https://example.com/cover.jpg", "createdAt": "2023-01-01T00:00:00Z", "description": "A weekly podcast about technology and innovation", "id": "e5f6a7b8-9012-3456-ef01-345678901234", "isMonetized": false, "isPublished": true, "pricingTier": "free", "slug": "my-awesome-podcast", "title": "My Awesome Podcast", "updatedAt": "2023-01-01T12:00:00Z", "userId": "f6a7b8c9-0123-4567-f012-456789012345"}
        "401":
          application/json: {"code": "AUTH_INVALID_CREDENTIALS", "error": "Invalid email or password"}
        "500":
          application/json: {"code": "AUTH_INVALID_CREDENTIALS", "error": "Invalid email or password"}
  delete_series:
    speakeasy-default-delete-series:
      parameters:
        path:
          series_id: "39e98c84-7f40-41b5-aa2a-96cccef6c6c9"
      responses:
        "401":
          application/json: {"code": "AUTH_INVALID_CREDENTIALS", "error": "Invalid email or password"}
        "500":
          application/json: {"code": "AUTH_INVALID_CREDENTIALS", "error": "Invalid email or password"}
  list_api_keys:
    speakeasy-default-list-api-keys:
      responses:
        "200":
          application/json: [{"createdAt": "2023-01-01T00:00:00Z", "expiresAt": "2024-01-01T00:00:00Z", "id": "d290f1ee-6c54-4b01-90e6-d701748f0851", "isActive": true, "keyPrefix": "pk_live_", "lastUsedAt": "2023-01-01T12:00:00Z", "name": "Production API Key", "permissions": ["read:posts", "write:posts"], "updatedAt": "2023-01-01T12:00:00Z", "userId": "b2c3d4e5-6f78-9012-bcde-f12345678901"}]
        "401":
          application/json: {"code": "AUTH_INVALID_CREDENTIALS", "error": "Invalid email or password"}
        "500":
          application/json: {"code": "AUTH_INVALID_CREDENTIALS", "error": "Invalid email or password"}
  create_api_key:
    speakeasy-default-create-api-key:
      requestBody:
        application/json: {"expiresAt": "2024-01-01T00:00:00Z", "name": "Production API Key", "permissions": ["read:posts", "write:posts"]}
      responses:
        "201":
          application/json: {"createdAt": "2023-01-01T00:00:00Z", "expiresAt": "2024-01-01T00:00:00Z", "id": "d290f1ee-6c54-4b01-90e6-d701748f0851", "isActive": true, "key": "pk_live_1234567890abcdef", "keyPrefix": "pk_live_", "name": "Production API Key", "permissions": ["read:posts", "write:posts"]}
        "400":
          application/json: {"code": "AUTH_INVALID_CREDENTIALS", "error": "Invalid email or password"}
        "500":
          application/json: {"code": "AUTH_INVALID_CREDENTIALS", "error": "Invalid email or password"}
  get_api_key:
    speakeasy-default-get-api-key:
      parameters:
        path:
          api_key_id: "66760d63-bc4c-4eba-9f66-728d076e4afd"
      responses:
        "200":
          application/json: {"createdAt": "2023-01-01T00:00:00Z", "expiresAt": "2024-01-01T00:00:00Z", "id": "d290f1ee-6c54-4b01-90e6-d701748f0851", "isActive": true, "keyPrefix": "pk_live_", "lastUsedAt": "2023-01-01T12:00:00Z", "name": "Production API Key", "permissions": ["read:posts", "write:posts"], "updatedAt": "2023-01-01T12:00:00Z", "userId": "b2c3d4e5-6f78-9012-bcde-f12345678901"}
        "401":
          application/json: {"code": "AUTH_INVALID_CREDENTIALS", "error": "Invalid email or password"}
        "500":
          application/json: {"code": "AUTH_INVALID_CREDENTIALS", "error": "Invalid email or password"}
  update_api_key:
    speakeasy-default-update-api-key:
      parameters:
        path:
          api_key_id: "4ad661a5-a100-4a43-8c09-72059edc344a"
      requestBody:
        application/json: {"expiresAt": "2024-06-01T00:00:00Z", "isActive": false, "name": "Updated API Key Name", "permissions": ["read:posts"]}
      responses:
        "200":
          application/json: {"createdAt": "2023-01-01T00:00:00Z", "expiresAt": "2024-01-01T00:00:00Z", "id": "d290f1ee-6c54-4b01-90e6-d701748f0851", "isActive": true, "keyPrefix": "pk_live_", "lastUsedAt": "2023-01-01T12:00:00Z", "name": "Production API Key", "permissions": ["read:posts", "write:posts"], "updatedAt": "2023-01-01T12:00:00Z", "userId": "b2c3d4e5-6f78-9012-bcde-f12345678901"}
        "401":
          application/json: {"code": "AUTH_INVALID_CREDENTIALS", "error": "Invalid email or password"}
        "500":
          application/json: {"code": "AUTH_INVALID_CREDENTIALS", "error": "Invalid email or password"}
  delete_api_key:
    speakeasy-default-delete-api-key:
      parameters:
        path:
          api_key_id: "d30aa790-7049-4dd6-9089-24cd5bc5bd07"
      responses:
        "401":
          application/json: {"code": "AUTH_INVALID_CREDENTIALS", "error": "Invalid email or password"}
        "500":
          application/json: {"code": "AUTH_INVALID_CREDENTIALS", "error": "Invalid email or password"}
examplesVersion: 1.0.2

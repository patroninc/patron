/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type DeleteSeriesRequest = {
  /**
   * UUID of the series to delete
   */
  seriesId: string;
};

/** @internal */
export const DeleteSeriesRequest$inboundSchema: z.ZodType<
  DeleteSeriesRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  series_id: z.string(),
}).transform((v) => {
  return remap$(v, {
    "series_id": "seriesId",
  });
});

/** @internal */
export type DeleteSeriesRequest$Outbound = {
  series_id: string;
};

/** @internal */
export const DeleteSeriesRequest$outboundSchema: z.ZodType<
  DeleteSeriesRequest$Outbound,
  z.ZodTypeDef,
  DeleteSeriesRequest
> = z.object({
  seriesId: z.string(),
}).transform((v) => {
  return remap$(v, {
    seriesId: "series_id",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DeleteSeriesRequest$ {
  /** @deprecated use `DeleteSeriesRequest$inboundSchema` instead. */
  export const inboundSchema = DeleteSeriesRequest$inboundSchema;
  /** @deprecated use `DeleteSeriesRequest$outboundSchema` instead. */
  export const outboundSchema = DeleteSeriesRequest$outboundSchema;
  /** @deprecated use `DeleteSeriesRequest$Outbound` instead. */
  export type Outbound = DeleteSeriesRequest$Outbound;
}

export function deleteSeriesRequestToJSON(
  deleteSeriesRequest: DeleteSeriesRequest,
): string {
  return JSON.stringify(
    DeleteSeriesRequest$outboundSchema.parse(deleteSeriesRequest),
  );
}

export function deleteSeriesRequestFromJSON(
  jsonString: string,
): SafeParseResult<DeleteSeriesRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => DeleteSeriesRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'DeleteSeriesRequest' from JSON`,
  );
}

/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type UploadFileSecurity = {
  cookieAuth: string;
};

/** @internal */
export const UploadFileSecurity$inboundSchema: z.ZodType<
  UploadFileSecurity,
  z.ZodTypeDef,
  unknown
> = z.object({
  cookieAuth: z.string(),
});

/** @internal */
export type UploadFileSecurity$Outbound = {
  cookieAuth: string;
};

/** @internal */
export const UploadFileSecurity$outboundSchema: z.ZodType<
  UploadFileSecurity$Outbound,
  z.ZodTypeDef,
  UploadFileSecurity
> = z.object({
  cookieAuth: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UploadFileSecurity$ {
  /** @deprecated use `UploadFileSecurity$inboundSchema` instead. */
  export const inboundSchema = UploadFileSecurity$inboundSchema;
  /** @deprecated use `UploadFileSecurity$outboundSchema` instead. */
  export const outboundSchema = UploadFileSecurity$outboundSchema;
  /** @deprecated use `UploadFileSecurity$Outbound` instead. */
  export type Outbound = UploadFileSecurity$Outbound;
}

export function uploadFileSecurityToJSON(
  uploadFileSecurity: UploadFileSecurity,
): string {
  return JSON.stringify(
    UploadFileSecurity$outboundSchema.parse(uploadFileSecurity),
  );
}

export function uploadFileSecurityFromJSON(
  jsonString: string,
): SafeParseResult<UploadFileSecurity, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => UploadFileSecurity$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'UploadFileSecurity' from JSON`,
  );
}

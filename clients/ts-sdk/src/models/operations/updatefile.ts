/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import * as models from "../index.js";

export type UpdateFileSecurity = {
  cookieAuth: string;
};

export type UpdateFileRequest = {
  /**
   * UUID of the file to update metadata for
   */
  fileId: string;
  /**
   * Updated file metadata, filename, or status
   */
  updateUserFileRequest: models.UpdateUserFileRequest;
};

/** @internal */
export const UpdateFileSecurity$inboundSchema: z.ZodType<
  UpdateFileSecurity,
  z.ZodTypeDef,
  unknown
> = z.object({
  cookieAuth: z.string(),
});

/** @internal */
export type UpdateFileSecurity$Outbound = {
  cookieAuth: string;
};

/** @internal */
export const UpdateFileSecurity$outboundSchema: z.ZodType<
  UpdateFileSecurity$Outbound,
  z.ZodTypeDef,
  UpdateFileSecurity
> = z.object({
  cookieAuth: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateFileSecurity$ {
  /** @deprecated use `UpdateFileSecurity$inboundSchema` instead. */
  export const inboundSchema = UpdateFileSecurity$inboundSchema;
  /** @deprecated use `UpdateFileSecurity$outboundSchema` instead. */
  export const outboundSchema = UpdateFileSecurity$outboundSchema;
  /** @deprecated use `UpdateFileSecurity$Outbound` instead. */
  export type Outbound = UpdateFileSecurity$Outbound;
}

export function updateFileSecurityToJSON(
  updateFileSecurity: UpdateFileSecurity,
): string {
  return JSON.stringify(
    UpdateFileSecurity$outboundSchema.parse(updateFileSecurity),
  );
}

export function updateFileSecurityFromJSON(
  jsonString: string,
): SafeParseResult<UpdateFileSecurity, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => UpdateFileSecurity$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'UpdateFileSecurity' from JSON`,
  );
}

/** @internal */
export const UpdateFileRequest$inboundSchema: z.ZodType<
  UpdateFileRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  file_id: z.string(),
  UpdateUserFileRequest: models.UpdateUserFileRequest$inboundSchema,
}).transform((v) => {
  return remap$(v, {
    "file_id": "fileId",
    "UpdateUserFileRequest": "updateUserFileRequest",
  });
});

/** @internal */
export type UpdateFileRequest$Outbound = {
  file_id: string;
  UpdateUserFileRequest: models.UpdateUserFileRequest$Outbound;
};

/** @internal */
export const UpdateFileRequest$outboundSchema: z.ZodType<
  UpdateFileRequest$Outbound,
  z.ZodTypeDef,
  UpdateFileRequest
> = z.object({
  fileId: z.string(),
  updateUserFileRequest: models.UpdateUserFileRequest$outboundSchema,
}).transform((v) => {
  return remap$(v, {
    fileId: "file_id",
    updateUserFileRequest: "UpdateUserFileRequest",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateFileRequest$ {
  /** @deprecated use `UpdateFileRequest$inboundSchema` instead. */
  export const inboundSchema = UpdateFileRequest$inboundSchema;
  /** @deprecated use `UpdateFileRequest$outboundSchema` instead. */
  export const outboundSchema = UpdateFileRequest$outboundSchema;
  /** @deprecated use `UpdateFileRequest$Outbound` instead. */
  export type Outbound = UpdateFileRequest$Outbound;
}

export function updateFileRequestToJSON(
  updateFileRequest: UpdateFileRequest,
): string {
  return JSON.stringify(
    UpdateFileRequest$outboundSchema.parse(updateFileRequest),
  );
}

export function updateFileRequestFromJSON(
  jsonString: string,
): SafeParseResult<UpdateFileRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => UpdateFileRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'UpdateFileRequest' from JSON`,
  );
}

/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type ResendVerificationEmailSecurity = {
  cookieAuth: string;
};

/** @internal */
export const ResendVerificationEmailSecurity$inboundSchema: z.ZodType<
  ResendVerificationEmailSecurity,
  z.ZodTypeDef,
  unknown
> = z.object({
  cookieAuth: z.string(),
});

/** @internal */
export type ResendVerificationEmailSecurity$Outbound = {
  cookieAuth: string;
};

/** @internal */
export const ResendVerificationEmailSecurity$outboundSchema: z.ZodType<
  ResendVerificationEmailSecurity$Outbound,
  z.ZodTypeDef,
  ResendVerificationEmailSecurity
> = z.object({
  cookieAuth: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ResendVerificationEmailSecurity$ {
  /** @deprecated use `ResendVerificationEmailSecurity$inboundSchema` instead. */
  export const inboundSchema = ResendVerificationEmailSecurity$inboundSchema;
  /** @deprecated use `ResendVerificationEmailSecurity$outboundSchema` instead. */
  export const outboundSchema = ResendVerificationEmailSecurity$outboundSchema;
  /** @deprecated use `ResendVerificationEmailSecurity$Outbound` instead. */
  export type Outbound = ResendVerificationEmailSecurity$Outbound;
}

export function resendVerificationEmailSecurityToJSON(
  resendVerificationEmailSecurity: ResendVerificationEmailSecurity,
): string {
  return JSON.stringify(
    ResendVerificationEmailSecurity$outboundSchema.parse(
      resendVerificationEmailSecurity,
    ),
  );
}

export function resendVerificationEmailSecurityFromJSON(
  jsonString: string,
): SafeParseResult<ResendVerificationEmailSecurity, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ResendVerificationEmailSecurity$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ResendVerificationEmailSecurity' from JSON`,
  );
}

/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type UpdateUserInfoSecurity = {
  cookieAuth: string;
};

/** @internal */
export const UpdateUserInfoSecurity$inboundSchema: z.ZodType<
  UpdateUserInfoSecurity,
  z.ZodTypeDef,
  unknown
> = z.object({
  cookieAuth: z.string(),
});

/** @internal */
export type UpdateUserInfoSecurity$Outbound = {
  cookieAuth: string;
};

/** @internal */
export const UpdateUserInfoSecurity$outboundSchema: z.ZodType<
  UpdateUserInfoSecurity$Outbound,
  z.ZodTypeDef,
  UpdateUserInfoSecurity
> = z.object({
  cookieAuth: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateUserInfoSecurity$ {
  /** @deprecated use `UpdateUserInfoSecurity$inboundSchema` instead. */
  export const inboundSchema = UpdateUserInfoSecurity$inboundSchema;
  /** @deprecated use `UpdateUserInfoSecurity$outboundSchema` instead. */
  export const outboundSchema = UpdateUserInfoSecurity$outboundSchema;
  /** @deprecated use `UpdateUserInfoSecurity$Outbound` instead. */
  export type Outbound = UpdateUserInfoSecurity$Outbound;
}

export function updateUserInfoSecurityToJSON(
  updateUserInfoSecurity: UpdateUserInfoSecurity,
): string {
  return JSON.stringify(
    UpdateUserInfoSecurity$outboundSchema.parse(updateUserInfoSecurity),
  );
}

export function updateUserInfoSecurityFromJSON(
  jsonString: string,
): SafeParseResult<UpdateUserInfoSecurity, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => UpdateUserInfoSecurity$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'UpdateUserInfoSecurity' from JSON`,
  );
}

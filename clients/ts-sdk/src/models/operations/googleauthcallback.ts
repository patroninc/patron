/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type GoogleAuthCallbackRequest = {
  /**
   * Authorization code from Google
   */
  code: string;
  /**
   * State parameter for CSRF protection
   */
  state: string;
};

/** @internal */
export const GoogleAuthCallbackRequest$inboundSchema: z.ZodType<
  GoogleAuthCallbackRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  code: z.string(),
  state: z.string(),
});

/** @internal */
export type GoogleAuthCallbackRequest$Outbound = {
  code: string;
  state: string;
};

/** @internal */
export const GoogleAuthCallbackRequest$outboundSchema: z.ZodType<
  GoogleAuthCallbackRequest$Outbound,
  z.ZodTypeDef,
  GoogleAuthCallbackRequest
> = z.object({
  code: z.string(),
  state: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GoogleAuthCallbackRequest$ {
  /** @deprecated use `GoogleAuthCallbackRequest$inboundSchema` instead. */
  export const inboundSchema = GoogleAuthCallbackRequest$inboundSchema;
  /** @deprecated use `GoogleAuthCallbackRequest$outboundSchema` instead. */
  export const outboundSchema = GoogleAuthCallbackRequest$outboundSchema;
  /** @deprecated use `GoogleAuthCallbackRequest$Outbound` instead. */
  export type Outbound = GoogleAuthCallbackRequest$Outbound;
}

export function googleAuthCallbackRequestToJSON(
  googleAuthCallbackRequest: GoogleAuthCallbackRequest,
): string {
  return JSON.stringify(
    GoogleAuthCallbackRequest$outboundSchema.parse(googleAuthCallbackRequest),
  );
}

export function googleAuthCallbackRequestFromJSON(
  jsonString: string,
): SafeParseResult<GoogleAuthCallbackRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GoogleAuthCallbackRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GoogleAuthCallbackRequest' from JSON`,
  );
}

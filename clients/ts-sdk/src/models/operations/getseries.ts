/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type GetSeriesRequest = {
  /**
   * UUID of the series to retrieve
   */
  seriesId: string;
};

/** @internal */
export const GetSeriesRequest$inboundSchema: z.ZodType<
  GetSeriesRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  series_id: z.string(),
}).transform((v) => {
  return remap$(v, {
    "series_id": "seriesId",
  });
});

/** @internal */
export type GetSeriesRequest$Outbound = {
  series_id: string;
};

/** @internal */
export const GetSeriesRequest$outboundSchema: z.ZodType<
  GetSeriesRequest$Outbound,
  z.ZodTypeDef,
  GetSeriesRequest
> = z.object({
  seriesId: z.string(),
}).transform((v) => {
  return remap$(v, {
    seriesId: "series_id",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetSeriesRequest$ {
  /** @deprecated use `GetSeriesRequest$inboundSchema` instead. */
  export const inboundSchema = GetSeriesRequest$inboundSchema;
  /** @deprecated use `GetSeriesRequest$outboundSchema` instead. */
  export const outboundSchema = GetSeriesRequest$outboundSchema;
  /** @deprecated use `GetSeriesRequest$Outbound` instead. */
  export type Outbound = GetSeriesRequest$Outbound;
}

export function getSeriesRequestToJSON(
  getSeriesRequest: GetSeriesRequest,
): string {
  return JSON.stringify(
    GetSeriesRequest$outboundSchema.parse(getSeriesRequest),
  );
}

export function getSeriesRequestFromJSON(
  jsonString: string,
): SafeParseResult<GetSeriesRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetSeriesRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetSeriesRequest' from JSON`,
  );
}

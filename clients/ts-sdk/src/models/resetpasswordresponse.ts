/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../lib/schemas.js";
import { Result as SafeParseResult } from "../types/fp.js";
import { SDKValidationError } from "./errors/sdkvalidationerror.js";

/**
 * Response for successful password reset
 */
export type ResetPasswordResponse = {
  /**
   * Success message
   */
  message: string;
};

/** @internal */
export const ResetPasswordResponse$inboundSchema: z.ZodType<
  ResetPasswordResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  message: z.string(),
});

/** @internal */
export type ResetPasswordResponse$Outbound = {
  message: string;
};

/** @internal */
export const ResetPasswordResponse$outboundSchema: z.ZodType<
  ResetPasswordResponse$Outbound,
  z.ZodTypeDef,
  ResetPasswordResponse
> = z.object({
  message: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ResetPasswordResponse$ {
  /** @deprecated use `ResetPasswordResponse$inboundSchema` instead. */
  export const inboundSchema = ResetPasswordResponse$inboundSchema;
  /** @deprecated use `ResetPasswordResponse$outboundSchema` instead. */
  export const outboundSchema = ResetPasswordResponse$outboundSchema;
  /** @deprecated use `ResetPasswordResponse$Outbound` instead. */
  export type Outbound = ResetPasswordResponse$Outbound;
}

export function resetPasswordResponseToJSON(
  resetPasswordResponse: ResetPasswordResponse,
): string {
  return JSON.stringify(
    ResetPasswordResponse$outboundSchema.parse(resetPasswordResponse),
  );
}

export function resetPasswordResponseFromJSON(
  jsonString: string,
): SafeParseResult<ResetPasswordResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ResetPasswordResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ResetPasswordResponse' from JSON`,
  );
}

/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../lib/schemas.js";
import { Result as SafeParseResult } from "../types/fp.js";
import { SDKValidationError } from "./errors/sdkvalidationerror.js";
import {
  UserInfo,
  UserInfo$inboundSchema,
  UserInfo$Outbound,
  UserInfo$outboundSchema,
} from "./userinfo.js";

/**
 * Response for successful user login
 */
export type LoginResponse = {
  /**
   * Success message
   */
  message: string;
  /**
   * User information for API responses and internal use
   */
  user: UserInfo;
};

/** @internal */
export const LoginResponse$inboundSchema: z.ZodType<
  LoginResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  message: z.string(),
  user: UserInfo$inboundSchema,
});

/** @internal */
export type LoginResponse$Outbound = {
  message: string;
  user: UserInfo$Outbound;
};

/** @internal */
export const LoginResponse$outboundSchema: z.ZodType<
  LoginResponse$Outbound,
  z.ZodTypeDef,
  LoginResponse
> = z.object({
  message: z.string(),
  user: UserInfo$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace LoginResponse$ {
  /** @deprecated use `LoginResponse$inboundSchema` instead. */
  export const inboundSchema = LoginResponse$inboundSchema;
  /** @deprecated use `LoginResponse$outboundSchema` instead. */
  export const outboundSchema = LoginResponse$outboundSchema;
  /** @deprecated use `LoginResponse$Outbound` instead. */
  export type Outbound = LoginResponse$Outbound;
}

export function loginResponseToJSON(loginResponse: LoginResponse): string {
  return JSON.stringify(LoginResponse$outboundSchema.parse(loginResponse));
}

export function loginResponseFromJSON(
  jsonString: string,
): SafeParseResult<LoginResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => LoginResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'LoginResponse' from JSON`,
  );
}

/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../lib/schemas.js";
import { Result as SafeParseResult } from "../types/fp.js";
import { SDKValidationError } from "./errors/sdkvalidationerror.js";

/**
 * Response for password reset request
 */
export type ForgotPasswordResponse = {
  /**
   * Password reset request status message
   */
  message: string;
};

/** @internal */
export const ForgotPasswordResponse$inboundSchema: z.ZodType<
  ForgotPasswordResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  message: z.string(),
});

/** @internal */
export type ForgotPasswordResponse$Outbound = {
  message: string;
};

/** @internal */
export const ForgotPasswordResponse$outboundSchema: z.ZodType<
  ForgotPasswordResponse$Outbound,
  z.ZodTypeDef,
  ForgotPasswordResponse
> = z.object({
  message: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ForgotPasswordResponse$ {
  /** @deprecated use `ForgotPasswordResponse$inboundSchema` instead. */
  export const inboundSchema = ForgotPasswordResponse$inboundSchema;
  /** @deprecated use `ForgotPasswordResponse$outboundSchema` instead. */
  export const outboundSchema = ForgotPasswordResponse$outboundSchema;
  /** @deprecated use `ForgotPasswordResponse$Outbound` instead. */
  export type Outbound = ForgotPasswordResponse$Outbound;
}

export function forgotPasswordResponseToJSON(
  forgotPasswordResponse: ForgotPasswordResponse,
): string {
  return JSON.stringify(
    ForgotPasswordResponse$outboundSchema.parse(forgotPasswordResponse),
  );
}

export function forgotPasswordResponseFromJSON(
  jsonString: string,
): SafeParseResult<ForgotPasswordResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ForgotPasswordResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ForgotPasswordResponse' from JSON`,
  );
}

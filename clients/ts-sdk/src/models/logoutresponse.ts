/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../lib/schemas.js";
import { Result as SafeParseResult } from "../types/fp.js";
import { SDKValidationError } from "./errors/sdkvalidationerror.js";

/**
 * Response for successful logout
 */
export type LogoutResponse = {
  /**
   * Success message
   */
  message: string;
};

/** @internal */
export const LogoutResponse$inboundSchema: z.ZodType<
  LogoutResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  message: z.string(),
});

/** @internal */
export type LogoutResponse$Outbound = {
  message: string;
};

/** @internal */
export const LogoutResponse$outboundSchema: z.ZodType<
  LogoutResponse$Outbound,
  z.ZodTypeDef,
  LogoutResponse
> = z.object({
  message: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace LogoutResponse$ {
  /** @deprecated use `LogoutResponse$inboundSchema` instead. */
  export const inboundSchema = LogoutResponse$inboundSchema;
  /** @deprecated use `LogoutResponse$outboundSchema` instead. */
  export const outboundSchema = LogoutResponse$outboundSchema;
  /** @deprecated use `LogoutResponse$Outbound` instead. */
  export type Outbound = LogoutResponse$Outbound;
}

export function logoutResponseToJSON(logoutResponse: LogoutResponse): string {
  return JSON.stringify(LogoutResponse$outboundSchema.parse(logoutResponse));
}

export function logoutResponseFromJSON(
  jsonString: string,
): SafeParseResult<LogoutResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => LogoutResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'LogoutResponse' from JSON`,
  );
}

---
import Layout from "@layouts/Layout.astro";
import { keystatic } from "@lib/keystatic/client";
import { getCollection } from "astro:content";
import { marked } from "marked";
import invariant from "tiny-invariant";
import Button from "@components/Button.astro";
import Posts from "@components/Posts.astro";

const POSTS_PER_LOAD = 6;

const i18n = await keystatic.singletons.blog.read({
  resolveLinkedFiles: true,
});
invariant(i18n, "No Blog content found");

const allPosts = await getCollection("blogPosts").then((posts) =>
  posts
    .filter((e) => !e.data.isDraft && !e.data.categories?.includes("changelog"))
    .toSorted(
      (a, b) =>
        (b.data.createdAt?.getTime() ?? 0) - (a.data.createdAt?.getTime() ?? 0),
    ),
);

// Get all categories
const allCategories = await getCollection("blogCategories");
const categories = allCategories.map((cat) => ({
  slug: cat.id,
  name: cat.data.name,
}));

// Count posts per category
const categoryCounts: Record<string, number> = {};
allPosts.forEach((post) => {
  if (post.data.categories) {
    post.data.categories.forEach((cat) => {
      categoryCounts[cat] = (categoryCounts[cat] || 0) + 1;
    });
  }
});

// Filter categories to only show those that have posts
const activeCategories = categories.filter((cat) => categoryCounts[cat.slug]);
---

<Layout title="Blog - Patron">
  <section
    class="bg-green cube-bg px-base mx-auto pt-[150px] pb-[80px] sm:pt-[200px] sm:pb-[160px]"
  >
    <div class="container-content flex flex-col gap-10">
      <h1 set:html={marked(i18n.title)} />

      <!-- Category Buttons -->
      <div class="flex flex-wrap gap-5">
        {
          activeCategories.map((category) => (
            <Button
              shadow={false}
              as="a"
              href={`/blog/category/${category.slug}/`}
              color="secondary"
              data-category={category.slug}
            >
              {category.name} ({categoryCounts[category.slug]})
            </Button>
          ))
        }
      </div>

      <Posts posts={allPosts} />

      {
        allPosts.length > POSTS_PER_LOAD && (
          <div class="flex justify-center">
            <Button id="show-more-btn">Show more</Button>
          </div>
        )
      }
    </div>
  </section>
</Layout>

---
import Layout from "@layouts/Layout.astro";
import { getCollection, render } from "astro:content";
import Info from "@components/blog/Info.astro";
import Warning from "@components/blog/Warning.astro";
import LearnMore from "@components/blog/LearnMore.astro";
import X from "@components/icons/X.astro";
import Linkedin from "@components/icons/Linkedin.astro";
import { YouTube, Vimeo } from "astro-embed";
import BlogBox from "@components/BlogBox.astro";

export async function getStaticPaths() {
  const entries = await getCollection("blogPosts");
  return entries.map((entry) => ({
    params: { slug: entry.id },
    props: { entry },
  }));
}

const categories = await getCollection("blogCategories");
const site = Astro.site;

const { entry } = Astro.props;
const { Content } = await render(entry);

const i18n = entry.data;
const ogImage = new URL(i18n.coverImage.src, site).href;
---

<Layout
  title={`${i18n.title} - Patron Blog`}
  ogTitle={`${i18n.title} - Patron Blog`}
  description={i18n.summary}
  ogDescription={i18n.summary}
  ogImage={ogImage}
  hideMovingBackground
  ogType="article"
  articlePublishedTime={i18n.createdAt?.toISOString()}
  articleModifiedTime={i18n.lastUpdatedAt?.toISOString()}
  articleAuthors={i18n.author ? [i18n.author] : []}
  articleSection={i18n.ogSection ?? "Technology"}
  articleTags={i18n.categories}
>
  <section
    class="bg-green cube-bg px-base mx-auto pt-[150px] pb-[80px] sm:pt-[200px] sm:pb-[160px]"
  >
    <BlogBox
      tag="div"
      color="black"
      pixelated={true}
      shadow={true}
      class="max-w-container mx-auto"
    >
      <h1>{i18n.title}</h1>
      {
        i18n.coverImage && (i18n.displayCoverImage ?? false) && (
          <div class="mt-6 mb-3">
            <img
              src={i18n.coverImage.src}
              alt={i18n.title}
            />
          </div>
        )
      }
      <div class="mt-3">
        <p class="font-semibold">{`Written by ${i18n.author}`}</p>
        <div class="flex w-full flex-col text-xs">
          {
            (i18n.author || i18n.lastUpdatedAt || i18n.createdAt) && (
              <div class="mt-2 flex items-center gap-3">
                {i18n.author && (
                  <>
                    <div class="flex items-center gap-2">
                      {(i18n.authorTwitter || i18n.authorLinkedIn) && (
                        <div class="flex items-center gap-3">
                          {i18n.authorTwitter && (
                            <a
                              href={i18n.authorTwitter}
                              target="_blank"
                              rel="noopener noreferrer"
                              class="transition-opacity hover:opacity-70"
                              aria-label={`${i18n.author}'s X profile`}
                            >
                              <X class="h-4 w-4 fill-current" />
                            </a>
                          )}
                          {i18n.authorLinkedIn && (
                            <a
                              href={i18n.authorLinkedIn}
                              target="_blank"
                              rel="noopener noreferrer"
                              class="transition-opacity hover:opacity-70"
                              aria-label={`${i18n.author}'s LinkedIn profile`}
                            >
                              <Linkedin class="h-4 w-4 fill-current" />
                            </a>
                          )}
                        </div>
                      )}
                    </div>
                  </>
                )}
                {(i18n.lastUpdatedAt || i18n.createdAt) && (
                  <>
                    <span>â€¢</span>
                    <span>
                      {(
                        i18n.lastUpdatedAt ? i18n.lastUpdatedAt : i18n.createdAt
                      )
                        ? (i18n.lastUpdatedAt
                            ? i18n.lastUpdatedAt
                            : i18n.createdAt
                          )?.toLocaleDateString("en-US", {
                            month: "short",
                            day: "numeric",
                            year: "numeric",
                          })
                        : ""}
                    </span>
                  </>
                )}
              </div>
            )
          }

          <div class="mt-3 flex flex-row flex-wrap gap-2 sm:flex-nowrap">
            {
              i18n.categories.map((category) => {
                return (
                  <a href={`/blog/category/${category}/`}>
                    <div class="bg-orange px-2 py-1 text-xxs rounded-sm">
                      {categories.find((c) => c.id === category)?.data.name}
                    </div>
                  </a>
                );
              })
            }
          </div>
        </div>
      </div>
      <article
        class="content mt-6 text-base leading-relaxed sm:text-lg sm:leading-[unset]"
      >
        <Content
          components={{
            YouTube,
            Vimeo,
            Info,
            Warning,
            LearnMore,
          }}
        />
      </article>
    </BlogBox>
  </section>
</Layout>

<style lang="postcss" >
.content {
  display: flex;
  flex-direction: column;
  gap: 2rem;

  h2 {
    &:not(:first-child) {
      margin: 1rem 0 1rem;
    }
  }

  hr {
    border-top-width: 5px;
  }

  code:not(pre code) {
    color: var(--color-blue);
  }

  h3 {
    &:not(:first-child) {
      margin: 1rem 0 0;
    }
  }

  ol {
    list-style: decimal inside;
    padding-left: 1.2rem;
    
    li {
      margin-bottom: 1rem;
      &::marker {
        font-weight: bold;
      }
    }
  }

  ul {
    list-style: disc inside;
    padding-left: 1.2rem;

    li {
      margin-bottom: 1rem;
      &::marker {
        font-weight: bold;
      }
    }

    li:has(input[type="checkbox"]) {
      list-style: none;
      display: flex;
      align-items: flex-start;
      gap: 0.75rem;
      margin-left: -1.2rem;
    }

    input[type="checkbox"] {
      appearance: none;
      width: 1.5rem;
      height: 1.5rem;
      min-width: 1.5rem;
      flex-shrink: 0;
      margin-top: 0.1rem;
      border: 3px solid black;
      background-color: white;
      cursor: pointer;
      position: relative;
      margin-top: 0.35rem;

      &:checked {
        background-color: var(--color-green);

        &::after {
          content: "";
          position: absolute;
          left: 50%;
          top: 50%;
          width: 0.4rem;
          height: 0.7rem;
          border: solid black;
          border-width: 0 3px 3px 0;
          transform: translate(-50%, -60%) rotate(45deg);
        }
      }

      &:not(:checked) {
        &::after {
          content: "";
          position: absolute;
          left: 50%;
          top: 50%;
          width: 0.75rem;
          height: 3px;
          background-color: black;
          transform: translate(-50%, -50%);
        }
      }
    }
  }

  a {
    text-decoration: underline;
  }

  blockquote {
    border-left: 5px solid black;
    padding-left: 1rem;
  }

  pre {
    padding: 1rem;
  }

  img,pre {
    border-radius: 0px;
  }
  
  /* Target p tags that contain img elements */
  p:has(img) {
    position: relative;
    left: 5px;
    width: max-content;
    max-width: 100%;
    padding-right: 10px;
    padding-bottom: 10px;
  }
  
  p:has(img)::before {
    content: "";
    position: absolute;
    top: -5px;
    left: -5px;
    display: block;
    width: 100%;
    height: 100%;

    border-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='3' height='3' viewBox='0 0 3 3' fill='none'%3E%3Cpath d='M2 3H1V2H2V3ZM1 2H0V1H1V2ZM3 2H2V1H3V2ZM2 1H1V0H2V1Z' fill='black'/%3E%3C/svg%3E");
    border-image-outset: 0;
    border-image-repeat: stretch;
    border-image-slice: 1;
    border-image-width: 1;
    border-style: solid;
    border-width: 5px;
  }
  
  table {
    position: relative;
    background-color: var(--color-purple);
    width: max-content;
    max-width: 100%;
    display: block;
    overflow-x: auto;
    border: 5px solid black;

    thead, tbody {
      width: 100%;
    }

    tr th {
      padding: 1rem;
    }

    tbody tr:last-child {
      border-bottom: 0;
    }

    tr {
      border-bottom: 5px solid black;
      text-align: left;

      td {
        padding: 1rem;

        a {
          word-break: unset;
        }
      }
    }
  }

  lite-vimeo, lite-youtube {
    max-width: 600px;
    width: 100%;

    border: 5px solid black;
  } 
}
</style>

---
import invariant from "tiny-invariant";
import { keystatic } from "@lib/keystatic/client";
import Button from "./Button.astro";
import ArrowRight from "@lucide/astro/icons/arrow-right";
import Link from "./Link.astro";
import KeystaticImage from "./KeystaticImage.astro";

const i18n = await keystatic.singletons.nav.read({
  resolveLinkedFiles: true,
});
invariant(i18n, "No homepage content found");
---

<div class="px-base fixed top-[15px] right-0 left-0 z-50">
  <div
    class="max-w-container mx-auto flex h-[90px] w-full items-center justify-between"
  >
    <div class="flex h-full w-[10px] items-center justify-center">
      <div class="h-full max-h-[calc(100%-20px)] w-[5px] bg-black"></div>
      <div
        class="h-full max-h-[calc(100%-10px)] w-[5px] border-y-5 border-y-black bg-white"
      >
      </div>
    </div>
    <nav
      class="grid h-full w-full grid-cols-2 items-center border-y-5 border-y-black bg-white p-[15px]"
    >
      <div class="justify-self-start">
        <a href={i18n.logo.href} aria-label="Go to homepage">
          <KeystaticImage
            src={i18n.logo.image}
            alt={i18n.logo.alt ?? ""}
            class="h-[50px]"
          />
        </a>
      </div>

      <div class="justify-self-end">
        {
          i18n.ctaButton.enabled && (
            <Button
              shadow={false}
              as="a"
              href={i18n.ctaButton.href}
              target={i18n.ctaButton.newTab ? "_blank" : undefined}
              rel={i18n.ctaButton.newTab ? "noopener noreferrer" : undefined}
            >
              <span class="inline sm:hidden">{i18n.ctaButton.shortLabel}</span>
              <span class="hidden sm:inline">{i18n.ctaButton.label}</span>{" "}
              <ArrowRight />
            </Button>
          )
        }
      </div>
    </nav>
    <div class="flex h-full w-[10px] items-center justify-center">
      <div
        class="h-full max-h-[calc(100%-10px)] w-[5px] border-y-5 border-y-black bg-white"
      >
      </div>
      <div class="h-full max-h-[calc(100%-20px)] w-[5px] bg-black"></div>
    </div>
  </div>
</div>

<script>
  const navCtaButton = document.getElementById("nav-cta-button");

  if (navCtaButton) {
    navCtaButton.addEventListener("click", () => {
      const waitlistSection = document.getElementById("waitlist");
      const emailInput = document.querySelector(
        '#waitlist input[type="email"]',
      ) as HTMLInputElement;

      if (waitlistSection) {
        // Smooth scroll to the waitlist section
        waitlistSection.scrollIntoView({
          behavior: "smooth",
          block: "start",
        });

        // Focus on the email input after a short delay to ensure scroll is complete
        setTimeout(() => {
          if (emailInput) {
            emailInput.focus();
          }
        }, 1000);
      }
    });
  }
</script>
